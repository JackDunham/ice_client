# Build stage: use Go 1.22 on Alpine Linux.
FROM golang:1.22-alpine AS builder

# Set GOFLAGS to force use of vendor'd dependencies.
ENV GOFLAGS=-mod=vendor

# Install git (if needed) and any other packages.
RUN apk add --no-cache git

WORKDIR /app

# Copy your vendor directory, along with go.mod and go.sum.
COPY go.mod go.sum ./
COPY vendor/ ./vendor/

# Copy the remaining source code.
COPY . .

# Build the binary statically.
RUN CGO_ENABLED=0 GOOS=linux go build -a -o webserver cmd/http/main.go

# Final stage: use a minimal scratch image.
FROM scratch

# Copy the built binary from the builder stage.
COPY --from=builder /app/webserver /webserver

# Expose the port your webserver listens on (adjust if necessary).
EXPOSE 8080

# Run the webserver binary.
ENTRYPOINT ["/webserver"]

